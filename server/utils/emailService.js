const nodemailer = require('nodemailer');

// Create transporter based on environment variables
const createTransporter = () => {
  if (!process.env.EMAIL_HOST || !process.env.EMAIL_USER || !process.env.EMAIL_PASS) {
    console.warn('Email configuration not found. Email notifications will be disabled.');
    return null;
  }

  return nodemailer.createTransport({
    host: process.env.EMAIL_HOST,
    port: parseInt(process.env.EMAIL_PORT) || 587,
    secure: process.env.EMAIL_PORT === '465',
    auth: {
      user: process.env.EMAIL_USER,
      pass: process.env.EMAIL_PASS
    },
    tls: {
      rejectUnauthorized: false // Allow self-signed certificates
    }
  });
};

// Email templates
const emailTemplates = {
  newLead: (leadData) => {
    return {
      subject: 'New Demo Request from Growly Landing Page',
      html: `
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>New Lead Notification</title>
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }
            .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 8px 8px; }
            .field { margin-bottom: 15px; }
            .label { font-weight: bold; color: #555; }
            .value { margin-top: 5px; padding: 8px; background: white; border-left: 4px solid #667eea; }
            .footer { text-align: center; margin-top: 20px; color: #666; font-size: 14px; }
            .priority { background: #e74c3c; color: white; padding: 5px 10px; border-radius: 4px; font-size: 12px; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>New Demo Request</h1>
              <p>Someone is interested in Growly!</p>
              <span class="priority">HIGH PRIORITY</span>
            </div>
            <div class="content">
              <div class="field">
                <div class="label">üë§ Name:</div>
                <div class="value">${leadData.name}</div>
              </div>
              <div class="field">
                <div class="label">üìß Email:</div>
                <div class="value"><a href="mailto:${leadData.email}">${leadData.email}</a></div>
              </div>
              <div class="field">
                <div class="label">üì± Phone:</div>
                <div class="value"><a href="tel:${leadData.phone}">${leadData.phone}</a></div>
              </div>
              <div class="field">
                <div class="label">üè¢ Business Type:</div>
                <div class="value">${leadData.businessType}</div>
              </div>
              <div class="field">
                <div class="label">üí¨ Message:</div>
                <div class="value">${leadData.message || 'No message provided'}</div>
              </div>
              <div class="field">
                <div class="label">üìÖ Submitted At:</div>
                <div class="value">${new Date().toLocaleString('en-US', {
        weekday: 'long',
        year: 'numeric',
        month: 'long',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit',
        timeZoneName: 'short'
      })}</div>
              </div>
              
            </div>
            <div class="footer">
              <p>This email was automatically generated by the Growly landing page.</p>
              <p>Please respond to this lead within 24 hours for best conversion rates.</p>
            </div>
          </div>
        </body>
        </html>
      `,
      text: `
New Demo Request from Growly Landing Page

Name: ${leadData.name}
Email: ${leadData.email}
Phone: ${leadData.phone}
Business Type: ${leadData.businessType}
Message: ${leadData.message || 'No message provided'}
Submitted At: ${new Date().toLocaleString()}
IP Address: ${leadData.ipAddress || 'Not available'}

Please respond to this lead within 24 hours for best conversion rates.
      `
    };
  },


};

// Send email function
const sendEmail = async ({ to, subject, html, text }) => {
  const transporter = createTransporter();

  if (!transporter) {
    throw new Error('Email transporter not configured');
  }

  const mailOptions = {
    from: `"Growly" <${process.env.EMAIL_USER}>`,
    to,
    subject,
    html,
    text
  };

  try {
    const info = await transporter.sendMail(mailOptions);
    console.log('Email sent successfully:', info.messageId);
    return info;
  } catch (error) {
    console.error('Failed to send email:', error);
    throw error;
  }
};

module.exports = {
  sendEmail,
  emailTemplates
};
